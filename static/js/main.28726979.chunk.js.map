{"version":3,"sources":["styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["Screen","styled","div","image","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledLink","a","Web3","require","CONFIG","webAddress","App","state","errorMessage","connected","sending","pandaCount","incrementMintAmount","newPandaCount","setState","setTimeout","console","clear","this","ethEnabled","enabled","ethEnable","isMobile","window","location","assign","log","ethereum","send","web3","addr","currentProvider","selectedAddress","amount","toString","amountToSend","utils","toWei","eth","sendTransaction","from","to","CONTRACT_ADDRESS","value","status","code","message","style","padding","backgroundColor","SHOW_BACKGROUND","alt","src","borderRadius","borderWidth","borderColor","borderStyle","background","boxShadow","height","textAlign","fontSize","fontWeight","color","marginTop","target","href","SCAN_LINK","lineHeight","onClick","e","preventDefault","decrementMintAmount","didSelecteDonate","didSelectWallet","width","NETWORK","NAME","flexDirection","justifyContent","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28726979.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: black;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100% !important;\n  min-height: 20vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 20px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 22px;\n  border: solid;\n  background-color: var(--black);\n  padding: 3px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 200px;\n  cursor: pointer;\n  // box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  // -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  // -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 25px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 0.5;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 90%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 267px) {\n    width: 100px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px solid var(--black);\n  background-color: var(--accent);\n  border-radius: 3%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 500px) {\n    width: 100px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n  font-size: 24px;\n  font-weight: bold;\n`;\n\n","import React from 'react'\nimport * as s from \"./styles/globalStyles\";\nimport { isMobile } from 'react-device-detect';\n\nconst Web3 = require(\"web3\");\n\nconst CONFIG = {\n  \"CONTRACT_ADDRESS\": \"0x4C7497faCD4c661b5deCc119d3f89a0Ae81a2EAF\",\n  \"NETWORK\": {\n    \"NAME\": \"Ethereum\",\n    \"SYMBOL\": \"ETH\",\n    \"ID\": 1\n  },\n  \"SHOW_BACKGROUND\": true\n}\n\nconst webAddress = 'metakongssociety.com/'\n\nclass App extends React.Component {\n\n  state = {\n    errorMessage: '',\n    connected: false,\n    sending: false,\n    pandaCount: 1,\n  }\n\n  async componentDidMount() {\n\n    setTimeout(() => {\n      console.clear();\n    }, 100)\n\n    let enabled = await this.ethEnabled()\n    this.setState({\n      connected: enabled\n    });\n  }\n\n\n  async didSelectWallet() {\n    try {\n\n      let ethEnable = await this.ethEnabled()\n\n      if (isMobile && !ethEnable) {\n        window.location.assign('https://metamask.app.link/dapp/' + webAddress)\n      } else {\n        let ethEnable = await this.ethEnabled()\n\n        this.setState({\n          connected: ethEnable\n        });\n      }\n\n    } catch (error) {\n      console.log('error', error);\n    }\n\n\n\n  }\n\n  async ethEnabled() {\n    // if (window.web3) {\n    //   window.web3 = new Web3(window.web3.currentProvider);\n    //   window.ethereum.enable();\n    //   return true;\n    // }\n    // return false;\n\n    if (window.ethereum) {\n      await window.ethereum.send('eth_requestAccounts');\n      window.web3 = new Web3(window.ethereum);\n      return true;\n    }\n    return false;\n\n  }\n\n  async didSelecteDonate() {\n    try {\n\n\n      let ethEnable = await this.ethEnabled()\n\n      if (isMobile && !ethEnable) {\n        window.location.assign('https://metamask.app.link/dapp/' + webAddress)\n      } else {\n        const { pandaCount } = this.state\n        const web3 = window.web3;\n\n        var addr = web3.currentProvider.selectedAddress\n\n        var amount = 0.09 * pandaCount;\n\n        amount = amount.toString(); // Willing to send 2 ethers\n        const amountToSend = web3.utils.toWei(amount, \"ether\"); // Convert to wei value\n\n        this.setState({\n          sending: true\n        })\n        var send = await web3.eth.sendTransaction({ from: addr, to: CONFIG.CONTRACT_ADDRESS, value: amountToSend });\n\n        this.setState({\n          sending: false\n        })\n\n        if (send.status) {\n          this.setState({\n            errorMessage: 'You can now find your NFT on OpenSea.'\n          })\n        } else {\n          this.setState({\n            errorMessage: 'Transaction not successfull.'\n          })\n        }\n      }\n\n    } catch (error) {\n      console.log('error', error);\n      this.setState({\n        sending: false,\n        errorMessage: 'Transaction not successfull.'\n      })\n      if (error.code) {\n        this.setState({\n          errorMessage: error.message\n        })\n      }\n    }\n  }\n\n  decrementMintAmount() {\n    const { pandaCount } = this.state\n    let newPandaCount = pandaCount - 1;\n    if (newPandaCount < 1) {\n      newPandaCount = 1;\n    }\n    this.setState({\n      pandaCount: newPandaCount\n    })\n  };\n\n  incrementMintAmount = () => {\n    const { pandaCount } = this.state\n    let newPandaCount = pandaCount + 1;\n    if (newPandaCount > 5) {\n      newPandaCount = 5;\n    }\n    this.setState({\n      pandaCount: newPandaCount\n    })\n  };\n\n\n\n  render() {\n\n    const { errorMessage, connected, sending, pandaCount } = this.state\n\n    return (\n      <s.Screen>\n        <s.Container\n          flex={1}\n          ai={\"center\"}\n          style={{\n            padding: 24,\n            backgroundColor: \"\",\n\n          }}\n          image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n        >\n          <s.StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n          <s.SpacerSmall />\n          <s.ResponsiveWrapper flex={1} style={{ padding: 24 }}>\n\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n              {/*<s.StyledImg alt={\"example\"} src={\"/config/images/example.gif\"} />*/}\n            </s.Container>\n            <s.SpacerLarge />\n\n\n            <s.Container\n              flex={1}\n              jc={\"center\"}\n              ai={\"center\"}\n              style={{\n                padding: 24,\n                borderRadius: 13,\n                borderWidth: 3,\n                borderColor: '#00000',\n                borderStyle: 'solid',\n                background:\"var(--accent)\", \n                boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n                height: 400,\n              }}\n            >\n              <s.TextTitle\n                style={{\n                  textAlign: \"center\",\n                  fontSize: 35,\n                  fontWeight: \"bold\",\n                  color: \"var(--accent-text)\",\n                }}\n              >\n                {/* 100 */}\n                Pre-Sale: 1274/1555\n                <s.SpacerSmall />\n              </s.TextTitle>\n              <s.TextDescription\n                style={{\n                  textAlign: \"center\",\n                  color: \"var(--primary-text)\",\n                  marginTop: -20\n                }}\n              >\n                <s.StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                  0.09 ETH per MKS NFT\n                </s.StyledLink>\n                <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                  <s.StyledRoundButton\n                    style={{ lineHeight: 0.4 }}\n                    // disabled={claimingNft ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.decrementMintAmount();\n                    }}\n                  >\n                    -\n                  </s.StyledRoundButton>\n                  <s.SpacerMedium />\n                  <s.TextDescription\n                    style={{\n                      textAlign: \"center\",\n                      color: \"var(--accent-text)\",\n                    }}\n                  >\n                    {pandaCount}\n                  </s.TextDescription>\n                  <s.SpacerMedium />\n                  <s.StyledRoundButton\n                    // disabled={claimingNft ? 1 : 0}\n                    onClick={(e) => {\n                      e.preventDefault();\n                      this.incrementMintAmount();\n                    }}\n                  >\n                    +\n                  </s.StyledRoundButton>\n                </s.Container>\n                <s.SpacerSmall />\n\n                <s.StyledButton\n                  onClick={(e) => {\n                    this.setState({\n                      pandaCount: 5\n                    })\n                  }}\n                >\n                  SET MAX\n                </s.StyledButton>\n              </s.TextDescription>\n\n              <s.Container ai={\"center\"} jc={\"center\"}>\n                {\n                  !sending &&\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                    </s.TextDescription>\n                  </>\n                }\n\n                {\n                  sending &&\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      \n                      Processing . . .\n                      <s.SpacerSmall />\n                    </s.TextDescription>\n                  </>\n                }\n\n\n                <s.SpacerSmall />\n                <s.StyledButton\n                  onClick={(e) => {\n                    // e.preventDefault();\n                    if (connected) {\n                      this.didSelecteDonate();\n                    } else {\n                      this.didSelectWallet();\n                    }\n\n                  }}\n                >\n                  {!connected ? 'CONNECT' : 'MINT'}\n                </s.StyledButton>\n\n                {\n                  errorMessage !== '' &&\n                  <>\n                    <s.SpacerSmall />\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {errorMessage}\n                    </s.TextDescription>\n                  </>\n                }\n\n              </s.Container>\n              <s.SpacerMedium />\n            </s.Container>\n\n            <s.SpacerLarge />\n            <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n             {/*<s.StyledImg\n                alt={\"example\"}\n                src={\"/config/images/example.gif\"}\n                style={{ transform: \"scaleX(-1)\" }}*/}\n              \n            </s.Container>\n\n          </s.ResponsiveWrapper>\n          <s.SpacerMedium />\n          <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"white\",\n              }}\n            >\n              Please make sure you are connected to the right network (\n              {CONFIG.NETWORK.NAME} Mainnet) and the correct address.\n            </s.TextDescription>\n            <s.SpacerSmall />\n\n            <div style={{\n              flexDirection: 'row',\n              justifyContent: 'space-between',\n            }}>\n            </div>\n          </s.Container>\n        </s.Container>\n      </s.Screen>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}